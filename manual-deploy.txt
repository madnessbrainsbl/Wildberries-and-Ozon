# ИНСТРУКЦИЯ ПО ДЕПЛОЮ НА СЕРВЕР

1. Скачайте PuTTY: https://www.putty.org/

2. Подключитесь к серверу:
   - Host: 82.146.40.171
   - Username: root
   - Password: Alfa2000@

3. Выполните следующие команды на сервере:

# Обновление системы
apt-get update && apt-get upgrade -y

# Установка Docker
apt-get install -y ca-certificates curl gnupg lsb-release
mkdir -p /etc/apt/keyrings
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | gpg --dearmor -o /etc/apt/keyrings/docker.gpg
echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | tee /etc/apt/sources.list.d/docker.list > /dev/null
apt-get update
apt-get install -y docker-ce docker-ce-cli containerd.io docker-compose-plugin

# Установка Node.js
curl -fsSL https://deb.nodesource.com/setup_20.x | bash -
apt-get install -y nodejs

# Установка Chrome для Puppeteer
wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add -
echo "deb http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google.list
apt-get update
apt-get install -y google-chrome-stable

# Создание директории проекта
mkdir -p /opt/teleshop
cd /opt/teleshop

4. Загрузите архив project-deploy.tar.gz на сервер через FileZilla или WinSCP в папку /opt/teleshop

5. Распакуйте архив:
cd /opt/teleshop
tar -xzf project-deploy.tar.gz

6. Создайте файл окружения:
cat > /opt/teleshop/.env.production << 'EOF'
# Bot Configuration
TELEGRAM_BOT_TOKEN=8473502537:AAG1NAD5ryNZlx-FnEGGX9jlwqli7Zpq9Y0

# Supabase Configuration
VITE_SUPABASE_URL=https://kzrafexlalajoirzugdj.supabase.co
VITE_SUPABASE_ANON_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Imt6cmFmZXhsYWxham9pcnp1Z2RqIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTM3Mjk0MDMsImV4cCI6MjA2OTMwNTQwM30.rrKmafrLhQWNk7bIC5kfoO5pcvEkzO2i_THc5_Ep3nk

# Server Configuration
NODE_ENV=production
MINIAPP_URL=https://teleshop.su
HEADLESS_BROWSER=false
EOF

7. Настройте Nginx:
cat > /etc/nginx/sites-available/teleshop << 'EOF'
server {
    listen 80;
    server_name teleshop.su;

    location / {
        proxy_pass http://localhost:5173;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }

    location /api {
        proxy_pass http://localhost:3002;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }
}
EOF

ln -sf /etc/nginx/sites-available/teleshop /etc/nginx/sites-enabled/
rm -f /etc/nginx/sites-enabled/default
nginx -t && systemctl restart nginx

8. Запустите проект:
cd /opt/teleshop
docker compose -f docker-compose.prod.yml build
docker compose -f docker-compose.prod.yml up -d

9. Проверьте статус:
docker ps

Готово! Ваш сайт должен быть доступен по адресу http://teleshop.su
